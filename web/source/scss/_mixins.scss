// Mixins

@mixin separator {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    display: block;
    width: 100%;
    height: 1px;
    background-image: linear-gradient(-90deg, rgba(217,217,217,0.00) 0%, #DCDDD8 53%, rgba(216,216,216,0.00) 100%);

    @media only screen and (min-width: 1024px) {
      max-width: 80rem;
      left: 8rem;
    }
  }
}

// Preserve original color values
@function hsl($h, $s, $l) {
  @return unquote('hsl(#{$h},#{$s},#{$l})');
}

@function hsla($h, $s, $l, $a) {
  @return unquote('hsla(#{$h},#{$s},#{$l},#{$a})');
}

// Use HSB values provided by apps like Sketch and Photoshop and 
// convert them into HSL, because HSL (native CSS) and HSB aren't 
// interchangeable.
@function hsb($h-hsb, $s-hsb, $b-hsb, $a: 1) {
  @if $b-hsb == 0 {
    @return unquote('hsla(0, 0, 0, $a)');
  } @else {
    $l-hsl: ($b-hsb/2) * (2 - ($s-hsb/100));
    $s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);
    @return unquote('hsla($h-hsb, $s-hsl, $l-hsl, $a)');
  }
}
