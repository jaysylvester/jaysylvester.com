{"version":3,"sources":["immediate.js","global.js","init.js"],"names":["window","JAY","immediate","init","document","querySelector","classList","add","global","methods","header","imageLoad","body","bodyOffset","addEventListener","contains","getBoundingClientRect","top","Math","abs","height","setTimeout","remove","load","images","querySelectorAll","mobile","clientWidth","length","forEach","image","dimension","clientHeight","src","dataset","replace","ceil","devicePixelRatio","imageZoom","removeEventListener","mask","getElementById","createElement","anchor","parentNode","img","loading","naturalWidth","setAttribute","appendChild","e","preventDefault","figureGroup","figureIndex","children","indexOf","screenNav","escape","key","close","innerHTML","getAttribute","figure","index","target","tagName","href","insertBefore","append","getElementsByTagName","controller","action","view","onreadystatechange","readyState"],"mappings":"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","file":"../js/site.js","sourcesContent":["window.JAY = {}\n\nJAY.immediate = ( function () {\n  'use strict'\n\n  var methods = {\n    init: function () {\n      document.querySelector('html').classList.add('js')\n    }\n  }\n\n  //  Public methods\n  return {\n    init: methods.init\n  }\n\n})(JAY)\n\nJAY.immediate.init()\n","JAY.global = ( function () {\n  'use strict'\n\n  var methods = {\n\n    init: function () {\n      methods.header()\n      methods.imageLoad()\n    },\n\n    header: function () {\n      var body        = document.querySelector('body'),\n          bodyOffset  = 0,\n          header      = document.querySelector('body > header')\n\n      window.addEventListener('scroll', function () {\n        if ( !body.classList.contains('hidden-header') && bodyOffset > body.getBoundingClientRect().top && Math.abs(body.getBoundingClientRect().top) > header.getBoundingClientRect().height ) {\n          setTimeout( () => {\n            body.classList.remove('fixed-header') // Matches transition time in global.js\n          }, 300)\n          body.classList.add('hidden-header')\n        // The minus 10 pixels is to keep the header from popping in with only slight movements (happens frequently when using touchscreens and touch input devices)\n        // The second half of the statement deals with Safari's bounceback when you scroll past the top of the page\n        } else if ( body.getBoundingClientRect().top - 10 >= bodyOffset || Math.abs(body.getBoundingClientRect().top) <= header.getBoundingClientRect().height ) {\n          body.classList.remove('hidden-header')\n          if ( bodyOffset < -110 ) {\n            body.classList.add('fixed-header')\n          }\n        }\n\n        bodyOffset = body.getBoundingClientRect().top\n\n        if ( bodyOffset === 0 ) {\n          body.classList.remove('fixed-header')\n        }\n      })\n    },\n\n    // Lazy load images\n    imageLoad: function () {\n      const load = function () {\n        const images = document.querySelectorAll('img[data-src]:not(.loaded)'),\n              mobile = document.body.clientWidth < 768\n        \n        if ( images.length ) {\n          images.forEach( function (image) {\n            // Make sure all images have an explicit width or height set in CSS for best results\n            let dimension\n            // Default to width on mobile since most images are set to 100% width\n            if ( mobile ) {\n              dimension = image.clientWidth ? 'w_' + image.clientWidth : 'h_' + image.clientHeight\n            // Default to height on larger devices\n            } else {\n              dimension = image.clientHeight ? 'h_' + image.clientHeight : 'w_' + image.clientWidth\n            }\n\n            // If the image is within 1.5 viewport heights of the current offset, load it\n            if ( image.getBoundingClientRect().top < ( document.body.clientHeight * 1.5 ) ) {\n              image.src = image.dataset.src.replace('[parameters]', 'f_auto,q_80,' + dimension + ',dpr_' + Math.ceil(window.devicePixelRatio) + '.0')\n              image.classList.add('loaded')\n              if ( !mobile ) {\n                methods.imageZoom(image)\n              }\n            }\n          })\n        } else {\n          window.removeEventListener('scroll', load)\n        }\n      }\n      \n      // Load images within the viewport, then load additional images as the user scrolls\n      load()\n      window.addEventListener('scroll', load)\n    },\n\n    imageZoom: function (image) {\n      var mask    = document.getElementById('mask') || document.createElement('div'),\n          anchor  = image.parentNode,\n          img     = document.createElement('img'),\n          src     = image.dataset.src.replace('[parameters]', 'f_auto,q_80,dpr_' + Math.ceil(window.devicePixelRatio) + '.0'),\n          loading = function () {\n            // Add the loading spinner after a brief delay, otherwise it pops in and out and looks bad\n            setTimeout( function () {\n              if ( img.naturalWidth === 0 ) {\n                mask.classList.add('loading')\n\n                setTimeout( function () {\n                  mask.classList.remove('loading')\n                }, 10000)\n              }\n            }, 500)\n          }\n\n      mask.setAttribute('id', 'mask')\n      document.body.appendChild(mask)\n\n      anchor.addEventListener('click', function (e) {\n        e.preventDefault()\n        let figureGroup = image.parentNode.parentNode.parentNode.parentNode,\n            figureIndex = [...figureGroup.querySelector('section').children].indexOf(anchor.parentNode),\n            screenNav = false\n\n        mask.innerHTML = '<h1>Image 1 of 1</h1><a id=\"mask-open-tab\" href=\"' + src + '\" target=\"_blank\">Open this image in a new tab</a><a id=\"mask-close\" href=\"#\">Close</a>'\n\n        // Create navigation if it's a group of images\n        if ( figureGroup.getAttribute('role') === 'group' ) {\n          mask.querySelector('h1').innerHTML = 'Image <span class=\"current-image\">1</span> of <span class=\"total-images\">1</span>'\n          mask.innerHTML += '<nav id=\"screen-nav\"><ul></ul></nav>'\n          screenNav = mask.querySelector('#screen-nav')\n          figureGroup.querySelectorAll('figure').forEach( function (figure, index) {\n            screenNav.querySelector('ul').innerHTML += '<li' + ( index === figureIndex ? ' class=\"selected\"' : '' ) + '><a href=\"' + figure.querySelector('img').dataset.src.replace('[parameters]', 'f_auto,q_80,dpr_' + Math.ceil(window.devicePixelRatio) + '.0') + '\">' + figure.querySelector('img').getAttribute('alt') + '</a></li>'\n            mask.querySelector('span.current-image').innerHTML = figureIndex + 1\n            mask.querySelector('span.total-images').innerHTML = index + 1\n            screenNav.addEventListener('click', function (e) {\n              e.preventDefault()\n              if ( e.target.tagName === 'A' ) {\n                screenNav.querySelectorAll('li').forEach( function (anchor) {\n                  anchor.classList.remove('selected')\n                })\n                mask.querySelector('span.current-image').innerHTML = [...e.target.parentNode.parentNode.children].indexOf(e.target.parentNode) + 1\n                e.target.parentNode.classList.add('selected')\n                mask.querySelector('#mask-open-tab').setAttribute('href', e.target.href)\n                loading()\n                img.setAttribute('src', '/images/placeholder-zoom.svg')\n                img.setAttribute('src', e.target.href)\n              }\n            })\n          })\n        }\n\n        document.querySelector('html').classList.add('mask-enabled')\n        mask.classList.add('enabled')\n        img.setAttribute('src', src)\n        if ( screenNav ) {\n          mask.classList.add('screens')\n          mask.insertBefore(img, screenNav)\n        } else {\n          mask.append(img)\n        }\n        loading()\n\n        window.addEventListener('keydown', escape)\n        mask.querySelector('#mask-close').addEventListener('click', function (e) {\n          e.preventDefault()\n          close()\n        })\n\n        function escape(e) {\n          if ( e.key === 'Escape' ) {\n            close()\n          }\n        }\n\n        function close() {\n          document.querySelector('html').classList.remove('mask-enabled')\n          mask.classList.remove('enabled', 'loading', 'screens')\n          mask.innerHTML = ''\n          window.removeEventListener('keydown', escape)\n        }\n      })\n    },\n\n    // ajaxFormBinding: function(options) {\n    //   var form = document.querySelector(options.formSelector),\n    //       format = options.format || 'json',\n    //       type = options.type || 'direct'\n\n    //   form.addEventListener('submit', function (e) {\n    //     var request = new XMLHttpRequest(),\n    //         formData = new FormData(form),\n    //         data\n\n    //     e.preventDefault()\n\n    //     request.open('POST', form.action + '/format/' + format + '/type/' + type, true)\n    //     request.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    //     // request.setRequestHeader('Content-Type', 'application/json')\n    //     request.send(formData)\n\n    //     request.onreadystatechange = function () {\n    //       console.log('readyState: ' + request.readyState)\n    //       console.log('status: ' + request.status)\n    //     }\n\n    //     request.onload = function () {\n    //       if ( request.status >= 200 && request.status < 400 ) {\n    //         data = JSON.parse(request.responseText)\n    //         console.log(data)\n    //       } else {\n    //         // We reached our target server, but it returned an error\n    //       }\n    //     }\n\n    //     request.onerror = function () {\n    //       // There was a connection error of some sort\n    //     }\n    //   })\n    // }\n  }\n\n  //  Public methods\n  return {\n    // ajaxFormBinding: methods.ajaxFormBinding,\n    init:       methods.init,\n    imageZoom:  methods.imageZoom\n  }\n\n}(JAY))\n","JAY.init = function () {\n  'use strict'\n\n  var body        = document.getElementsByTagName('body')[0],\n      controller  = body.getAttribute('data-controller'),\n      action      = body.getAttribute('data-action'),\n      view        = body.getAttribute('data-view')\n\n  JAY.global.init()\n\n  if ( JAY[controller] ) {\n    JAY[controller].init()\n\n    if ( JAY[controller][action] && typeof JAY[controller][action] === 'function' ) {\n      JAY[controller][action]()\n\n      if ( JAY[controller][action][view] ) {\n        JAY[controller][action][view]()\n      }\n    }\n  }\n}\n\ndocument.onreadystatechange = function () {\n  'use strict'\n\n  if ( document.readyState === 'interactive' ) {\n    JAY.init()\n  }\n}\n"]}