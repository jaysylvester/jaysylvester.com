{"version":3,"sources":["immediate.js","global.js","init.js"],"names":["window","JAY","immediate","init","document","querySelector","classList","add","global","methods","header","imageLoad","body","bodyOffset","addEventListener","contains","getBoundingClientRect","top","Math","abs","height","remove","load","images","querySelectorAll","length","forEach","image","dimension","clientWidth","clientHeight","src","dataset","replace","ceil","devicePixelRatio","parentNode","tagName","imageZoom","removeEventListener","mask","getElementById","createElement","anchor","img","loading","setTimeout","naturalWidth","setAttribute","appendChild","e","preventDefault","figureGroup","figureIndex","Array","prototype","slice","call","children","indexOf","innerHTML","getAttribute","screenNav","figure","index","target","href","escape","key","close","append","getElementsByTagName","controller","action","view","onreadystatechange","readyState"],"mappings":"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","file":"../js/site.js","sourcesContent":["window.JAY = {}\n\nJAY.immediate = ( function () {\n  'use strict'\n\n  var methods = {\n    init: function () {\n      document.querySelector('html').classList.add('js')\n    }\n  }\n\n  //  Public methods\n  return {\n    init: methods.init\n  }\n\n})(JAY)\n\nJAY.immediate.init()\n","JAY.global = ( function () {\n  'use strict'\n\n  var methods = {\n\n    init: function () {\n      methods.header()\n      methods.imageLoad()\n    },\n\n    header: function () {\n      var body        = document.querySelector('body'),\n          bodyOffset  = 0,\n          header      = document.querySelector('body > header')\n\n      window.addEventListener('scroll', function () {\n        if ( !body.classList.contains('hidden-header') && bodyOffset > body.getBoundingClientRect().top && Math.abs(body.getBoundingClientRect().top) > header.getBoundingClientRect().height ) {\n          body.classList.add('hidden-header')\n        // The minus 10 pixels is to keep the header from popping in with only slight movements (happens frequently when using touchscreens and touch input devices)\n        // The second half of the statement deals with Safari's bounceback when you scroll past the top of the page\n        } else if ( body.getBoundingClientRect().top - 10 >= bodyOffset || Math.abs(body.getBoundingClientRect().top) <= header.getBoundingClientRect().height ) {\n          body.classList.remove('hidden-header')\n        }\n\n        bodyOffset = body.getBoundingClientRect().top\n      })\n    },\n\n    imageLoad: function () {\n      var load = function () {\n            const images = document.querySelectorAll('img[data-src]:not(.loaded)')\n            \n            if ( images.length ) {\n              images.forEach( function (image) {\n                // Make sure all images have an explicit width or height set in CSS for best results\n                let dimension\n                // Default to width on mobile since most images are set to 100% width\n                if ( document.body.clientWidth < 768 ) {\n                  dimension = image.clientWidth ? 'w_' + image.clientWidth : 'h_' + image.clientHeight\n                // Default to height on larger devices\n                } else {\n                  dimension = image.clientHeight ? 'h_' + image.clientHeight : 'w_' + image.clientWidth\n                }\n\n                // If the image is within 1.5 viewport heights of the current offset, load it\n                if ( image.getBoundingClientRect().top < ( document.body.clientHeight * 1.5 ) ) {\n                  image.src = image.dataset.src.replace('[parameters]', 'f_auto,q_80,' + dimension + ',dpr_' + Math.ceil(window.devicePixelRatio) + '.0')\n                  image.classList.add('loaded')\n                  if ( image.parentNode.parentNode.tagName === 'FIGURE' ) {\n                    methods.imageZoom(image)\n                  }\n                }\n              })\n            } else {\n              window.removeEventListener('scroll', load)\n            }\n          }\n      \n      load()\n\n      window.addEventListener('scroll', load)\n    },\n\n    imageZoom: function (image) {\n      var mask    = document.getElementById('mask') || document.createElement('div'),\n          anchor  = image.parentNode,\n          img     = document.createElement('img'),\n          src     = image.dataset.src.replace('[parameters]', 'f_auto,q_80,dpr_' + Math.ceil(window.devicePixelRatio) + '.0'),\n          loading = function () {\n            // Add the loading spinner after a brief delay, otherwise it pops in and out and looks bad\n            setTimeout( function () {\n              if ( img.naturalWidth === 0 ) {\n                mask.classList.add('loading')\n\n                setTimeout( function () {\n                  mask.classList.remove('loading')\n                }, 10000)\n              }\n            }, 500)\n          }\n\n      mask.setAttribute('id', 'mask')\n      document.body.appendChild(mask)\n\n      anchor.addEventListener('click', function (e) {\n        e.preventDefault()\n        let figureGroup = image.parentNode.parentNode.parentNode.parentNode,\n            figureIndex = Array.prototype.slice.call( figureGroup.querySelector('section').children ).indexOf(anchor.parentNode)\n\n        mask.innerHTML = '<a id=\"mask-open-tab\" href=\"' + src + '\" target=\"_blank\">Open this image in a new tab</a><a id=\"mask-close\" href=\"#\">Close</a>'\n\n        // Create navigation if it's a group of images\n        if ( figureGroup.getAttribute('role') === 'group' ) {\n          mask.innerHTML += '<nav id=\"screen-nav\"><ul></ul></nav>'\n          let screenNav = mask.querySelector('#screen-nav')\n          figureGroup.querySelectorAll('figure').forEach( function (figure, index) {\n            screenNav.querySelector('ul').innerHTML += '<li' + ( index === figureIndex ? ' class=\"selected\"' : '' ) + '><a href=\"' + figure.querySelector('img').dataset.src.replace('[parameters]', 'f_auto,q_80,dpr_' + Math.ceil(window.devicePixelRatio) + '.0') + '\">' + figure.querySelector('img').getAttribute('alt') + '</a></li>'\n            screenNav.addEventListener('click', function (e) {\n              e.preventDefault()\n              if ( e.target.tagName === 'A' ) {\n                screenNav.querySelectorAll('li').forEach( function (anchor) {\n                  anchor.classList.remove('selected')\n                })\n                e.target.parentNode.classList.add('selected')\n                mask.querySelector('#mask-open-tab').setAttribute('href', e.target.href)\n                loading()\n                img.setAttribute('src', '/images/placeholder-zoom.svg')\n                img.setAttribute('src', e.target.href)\n              }\n            })\n          })\n        }\n\n        document.querySelector('html').classList.add('mask-enabled')\n        mask.classList.add('enabled')\n        img.setAttribute('src', src)\n        mask.append(img)\n        loading()\n\n        window.addEventListener('keydown', escape)\n        mask.querySelector('#mask-close').addEventListener('click', function (e) {\n          e.preventDefault()\n          close()\n        })\n\n        function escape(e) {\n          if ( e.key === 'Escape' ) {\n            close()\n          }\n        }\n\n        function close() {\n          document.querySelector('html').classList.remove('mask-enabled')\n          mask.classList.remove('enabled', 'loading')\n          mask.innerHTML = ''\n          window.removeEventListener('keydown', escape)\n        }\n      })\n    },\n\n    // ajaxFormBinding: function(options) {\n    //   var form = document.querySelector(options.formSelector),\n    //       format = options.format || 'json',\n    //       type = options.type || 'direct'\n\n    //   form.addEventListener('submit', function (e) {\n    //     var request = new XMLHttpRequest(),\n    //         formData = new FormData(form),\n    //         data\n\n    //     e.preventDefault()\n\n    //     request.open('POST', form.action + '/format/' + format + '/type/' + type, true)\n    //     request.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    //     // request.setRequestHeader('Content-Type', 'application/json')\n    //     request.send(formData)\n\n    //     request.onreadystatechange = function () {\n    //       console.log('readyState: ' + request.readyState)\n    //       console.log('status: ' + request.status)\n    //     }\n\n    //     request.onload = function () {\n    //       if ( request.status >= 200 && request.status < 400 ) {\n    //         data = JSON.parse(request.responseText)\n    //         console.log(data)\n    //       } else {\n    //         // We reached our target server, but it returned an error\n    //       }\n    //     }\n\n    //     request.onerror = function () {\n    //       // There was a connection error of some sort\n    //     }\n    //   })\n\n    //   // Some browsers don't include the submit button's value when form.submit() is\n    //   // called. This function creates a click listener that duplicates a form's submit\n    //   // button as a hidden field so its name/value can be included in AJAX POSTs,\n    //   // allowing different processing based on different submit buttons.\n    //   form.addEventListener('click', function (e) {\n    //     var input = document.createElement('input'),\n    //         previousActions = form.querySelectorAll('input[type=\"hidden\"].submit-surrogate')\n\n    //     for ( var i = 0; i < previousActions.length; i++ ) {\n    //       form.removeChild(previousActions[i])\n    //     }\n\n    //     if ( e.target.type && e.target.type.toLowerCase() === 'submit' ) {\n    //       input.name = e.target.name\n    //       input.type = 'hidden'\n    //       input.value = e.target.value\n    //       input.className = 'submit-surrogate'\n\n    //       form.appendChild(input)\n    //     }\n    //   })\n    // }\n  }\n\n  //  Public methods\n  return {\n    // ajaxFormBinding: methods.ajaxFormBinding,\n    init:       methods.init,\n    imageZoom:  methods.imageZoom\n  }\n\n}(JAY))\n","JAY.init = function () {\n  'use strict'\n\n  var body        = document.getElementsByTagName('body')[0],\n      controller  = body.getAttribute('data-controller'),\n      action      = body.getAttribute('data-action'),\n      view        = body.getAttribute('data-view')\n\n  JAY.global.init()\n\n  if ( JAY[controller] ) {\n    JAY[controller].init()\n\n    if ( JAY[controller][action] && typeof JAY[controller][action] === 'function' ) {\n      JAY[controller][action]()\n\n      if ( JAY[controller][action][view] ) {\n        JAY[controller][action][view]()\n      }\n    }\n  }\n}\n\ndocument.onreadystatechange = function () {\n  'use strict'\n\n  if ( document.readyState === 'interactive' ) {\n    JAY.init()\n  }\n}\n"]}